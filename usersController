from pecan import expose, abort
from pecan.rest import RestController
from pecan.secure import secure
from test_project.model import model
import badgesController


@secure('check_permissions')
class UsersController(RestController):

    badges = badgesController.BadgesController()

    @expose('json')
    def get_one(self, user_id):
        try:
            badges = {}
            user = model.get_user(user_id)

            for u in user.users:
                badges[u.badge.badge_id] = (u.cant_act, u.badge.amount_necessary, u.badge.description)
            user_dict = {user.user_id:{'fullname':user.fullname,'password':user.password, 'badges':badges}}
            return user_dict

        except KeyError:
            abort(404)
                #raise exc.HTTPNotFound()

    @expose('json')
    def get_all(self):
        users_dict={}
        for user in model.get_all_users():
            users_dict[user.user_id] = self.get_one(user.user_id)[user.user_id]
        return users_dict

    @expose()
    def post(self, user_id):
        pass

    @expose()
    def delete(self, user_id="none"):
        #if not users_dict.delete_user(user_id):
        #   abort(404)
        pass

    @expose('error.html')
    def notfound(self):
        #import ipdb; ipdb.set_trace()
        #return dict(status=404, message="test_project does not have this page")
        pass
